{"version":3,"sources":["components/dictionaryLinks/dictionaryLinks.js","components/words/words.js","components/words/tableHeader.js","components/groups/groups.js","components/examples/examples.js","components/examples/practice.js","App.js","serviceWorker.js","index.js"],"names":["dictionaryLinks","props","word","Fragment","href","className","rel","target","EditableContext","React","createContext","TextArea","Input","EditableCell","getInput","renderCell","getFieldDecorator","editing","dataIndex","title","record","inputType","children","index","restProps","Item","style","margin","rules","required","message","initialValue","Consumer","this","Component","Words","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","e","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","console","log","setState","textareaHandleChange","wordsToAdd","handleCheckBoxSelect","selectedValues","selectedWords","slice","checked","push","delIndex","indexOf","splice","showAddWordsToGroup","length","handleSubmit","fetch","window","rest","apiUrl","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","words","then","fetchWords","catch","err","preventDefault","handleAddToTheGroup","groupId","selectedGroupId","wordIds","handleChangeGroup","deleteWord","wordId","isEditing","key","editingKey","cancel","saveOnTheServer","item","row","id","groups","isLoading","totalPages","pageNumber","pageSize","columns","editable","sorter","a","b","name","localeCompare","sortDirections","practiced","Date","last","createdAt","form","save","onConfirm","disabled","edit","resp","json","data","content","forEach","exampleArr","convertedWord","examples","map","sort","reverse","toLocaleString","validateFields","error","newData","findIndex","components","cell","col","onCell","Provider","rows","bordered","dataSource","rowClassName","pagination","defaultPageSize","Form","create","tableHeader","scope","Groups","newGroupName","fetchGroups","newGroupNameHandleChange","handleGroupClick","selectedGroup","deleteGroup","onSubmit","htmlFor","lastPractice","Examples","deleteExample","fetchExamples","wordCreatedAt","that","rowKey","exampleToAdd","fetchTheWord","Number","match","params","response","Content","Layout","Footer","Sider","App","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","defaultSelectedKeys","to","exact","path","component","Practice","textAlign","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ce0b029.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function dictionaryLinks(props) {\n    const word = props.word;\n\n    return (\n        <React.Fragment>\n            <a href={\"https://translate.google.ru/#view=home&op=translate&sl=en&tl=ru&text=\" + word}\n               className=\"badge badge-primary\" rel=\"noopener noreferrer\" target=\"_blank\">G</a>&nbsp;\n            <a href={\"https://dictionary.cambridge.org/dictionary/english/\" + word}\n               className=\"badge badge-secondary\" rel=\"noopener noreferrer\" target=\"_blank\">C</a>&nbsp;\n            <a href={\"https://www.urbandictionary.com/define.php?term=\" + word}\n               className=\"badge badge-info\" rel=\"noopener noreferrer\" target=\"_blank\">U</a>&nbsp;\n            <a href={\"https://www.dictionary.com/browse/\" + word}\n               className=\"badge badge-light\" rel=\"noopener noreferrer\" target=\"_blank\">D</a>&nbsp;\n            <a href={\"https://youglish.com/search/\" + word + \"/us\"}\n               className=\"badge badge-danger\" rel=\"noopener noreferrer\" target=\"_blank\">Y</a>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport { Button, Divider, Form, Icon, Input, Popconfirm, Table } from 'antd';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\nimport Highlighter from 'react-highlight-words';\n\nconst EditableContext = React.createContext();\n\nconst { TextArea } = Input;\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass Words extends React.Component {\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) => {\n      if (record[dataIndex] !== null) {\n        return record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase())}\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    console.log(selectedKeys, confirm, dataIndex);\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      groups: [],\n      selectedWords: [],\n      wordsToAdd: '',\n      showAddWordsToGroup: false,\n      selectedGroupId: undefined,\n      isLoading: false,\n      totalPages: 0,\n      pageNumber: 0,\n      pageSize: 1000,\n      editingKey: '',\n      searchText: '',\n      searchedColumn: '',\n    };\n\n    this.columns = [\n      {\n        title: 'The word',\n        dataIndex: 'name',\n        width: '10%',\n        editable: true,\n        sorter: (a, b) => a.name.localeCompare(b.name),\n        sortDirections: ['descend', 'ascend'],\n        ...this.getColumnSearchProps('name')\n      },\n      {\n        title: 'Practiced',\n        dataIndex: 'practiced',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => a.practiced - b.practiced,\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Last',\n        dataIndex: 'last',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.last) - new Date(b.last),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Added',\n        dataIndex: 'createdAt',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Dictionaries',\n        dataIndex: 'dictionaries',\n        width: '10%',\n        render: (text, record) => {\n          return (\n            <span>\n              <DictionaryLinks word={record.name} />\n            </span>\n          );\n        },\n      },\n      {\n        title: 'Operation',\n        dataIndex: 'operation',\n        width: '20%',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    href={'no-action'}\n                    onClick={(e) => this.save(e, form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                <a href={'no-action'}>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <>\n              <a\n                rel=\"noopener noreferrer\" target=\"_blank\"\n                href={'/practice/' + record.key}>\n                Practice\n              </a> - <a href={'no-action'} disabled={editingKey !== ''} onClick={\n              (e) => this.edit(record.key, e)}>\n              Edit\n            </a> - <a href={\"delete/\" + record.key} onClick={e => {\n              this.deleteWord(e, record.key)\n            }}>Del</a>\n            </>\n          );\n        },\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.fetchWords(0);\n  }\n\n  fetchWords(pageNumber) {\n    fetch(`${window.rest.apiUrl}/api/word?size=${this.state.pageSize}&page=${pageNumber}`)\n    .then((resp) => resp.json())\n    .then((data) => {\n      let words = [];\n      data.content.forEach(item => {\n        const pullLastPracticedDate = (exampleArr) => {\n          if (exampleArr !== undefined && exampleArr.length > 0) {\n            const val = exampleArr.map(function (e) {\n              return e.createdAt;\n            }).sort().reverse()[0];\n            return val.toLocaleString('ru-RU')\n          } else {\n            return null;\n          }\n        };\n        const convertedWord = {\n          key: item.id.toString(),\n          practiced: item.examples.length,\n          last: pullLastPracticedDate(item.examples),\n          ...item\n        };\n        words.push(convertedWord);\n      });\n      this.setState({\n        words,\n      })\n    })\n  }\n\n  fetchGroups() {\n    fetch(`${window.rest.apiUrl}/api/group`)\n    .then((resp) => resp.json())\n    .then((data) => {\n      this.setState({ groups: data })\n    })\n  }\n\n  textareaHandleChange = (e) => {\n    this.setState({ wordsToAdd: e.target.value });\n  };\n\n  handleCheckBoxSelect = (e) => {\n    const selectedValues = this.state.selectedWords.slice();\n    if (e.target.checked) {\n      selectedValues.push(e.target.value);\n    } else {\n      const delIndex = selectedValues.indexOf(e.target.value);\n      selectedValues.splice(delIndex, 1);\n    }\n    const showAddWordsToGroup = selectedValues.length > 0;\n    this.setState({\n      selectedWords: selectedValues,\n      showAddWordsToGroup,\n    })\n  };\n\n  handleSubmit = (e) => {\n    fetch(`${window.rest.apiUrl}/api/word/create-word-list`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({ words: this.state.wordsToAdd })\n    })\n    .then(() => {\n      this.setState({ wordsToAdd: '' });\n      this.fetchWords();\n    })\n    .catch(err => console.log(err));\n    e.preventDefault();\n  };\n\n  handleAddToTheGroup = (e) => {\n    fetch(`${window.rest.apiUrl}/api/group/add-group-members`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        groupId: this.state.selectedGroupId,\n        wordIds: this.state.selectedWords,\n      })\n    })\n    .then(() => {\n      this.setState({ selectedWords: [], selectedGroupId: null });\n    })\n    .catch(err => console.log(err));\n  };\n\n  handleChangeGroup = (e) => {\n    this.setState({ selectedGroupId: e.target.value });\n  };\n\n  deleteWord = (e, wordId) => {\n    e.preventDefault();\n    fetch(`${window.rest.apiUrl}/api/word/${wordId}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n    })\n    .then(() => {\n      this.fetchWords();\n    })\n    .catch(err => console.log(err));\n  };\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(e, form, key) {\n    e.preventDefault();\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.words];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.saveOnTheServer(item, row);\n        this.setState({ words: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ words: newData, editingKey: '' });\n      }\n    });\n  }\n\n  saveOnTheServer = (item, row) => {\n    console.log(item, row);\n    fetch(`${window.rest.apiUrl}/api/word/${item.id}`, {\n      method: 'PATCH',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(row)\n    })\n    .then(() => {\n      //\n    })\n    .catch(err => console.log(err));\n  };\n\n  edit(key, e) {\n    e.preventDefault();\n    this.setState({ editingKey: key });\n  }\n\n  render() {\n    const { words } = this.state;\n\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <TextArea\n          className=\"form-control\"\n          rows=\"3\"\n          value={this.state.wordsToAdd}\n          onChange={this.textareaHandleChange}\n        />\n        <Button type=\"submit\" onClick={this.handleSubmit}>\n          Add words\n        </Button>\n        <Divider />\n        <Table\n          components={components}\n          bordered\n          dataSource={words}\n          columns={columns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: this.cancel,\n            defaultPageSize: 100,\n          }}\n        />\n      </EditableContext.Provider>\n    );\n  }\n}\n\nexport default Form.create()(Words);\n","import React from \"react\";\n\nexport default function tableHeader() {\n    return (\n        <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">The word</th>\n            <th scope=\"col\" className=\"d-lg-none\">Word id</th>\n            <th scope=\"col\">Added</th>\n            <th scope=\"col\">Practiced</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Dictionaries</th>\n            <th scope=\"col\">Practice</th>\n            <th scope=\"col\">Manage</th>\n        </tr>\n        </thead>\n    )\n}","import React from 'react';\nimport TableHeader from \"../words/tableHeader\";\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\n\nexport default class Groups extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            words: [],\n            groups: [],\n            selectedWords: [],\n            newGroupName: '',\n            selectedGroup: null,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchGroups();\n    }\n\n    fetchGroups() {\n        fetch(`${window.rest.apiUrl}/api/group`)\n            .then((resp) => resp.json())\n            .then((data) => {\n                this.setState({groups: data})\n            })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.newGroupName.length > 0) {\n            fetch(`${window.rest.apiUrl}/api/group`, {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                redirect: 'follow',\n                referrer: 'no-referrer',\n                body: JSON.stringify(\n                    {\n                        name: this.state.newGroupName,\n                    }\n                )\n            })\n                .then(() => {\n                    this.setState({newGroupName: ''});\n                    this.fetchGroups();\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    newGroupNameHandleChange = (e) => {\n        this.setState({newGroupName: e.target.value});\n    };\n\n    handleGroupClick = (e, key) => {\n        e.preventDefault();\n        const selectedGroup = this.state.groups[key];\n        this.setState({words: this.state.groups[key].words, selectedGroup: selectedGroup});\n    };\n\n    deleteGroup = (e, id) => {\n        e.preventDefault();\n        e.preventDefault();\n        fetch(`${window.rest.apiUrl}/api/group/${id}`, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n        })\n            .then(() => {\n                this.fetchGroups()\n            })\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        const {groups, words, selectedGroup} = this.state;\n\n        return (\n            <div id=\"test\" className=\"container\">\n                <h2>Manage groups</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <br/>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"newWordsTextarea\">New group name&nbsp;</label>\n                        <input\n                            value={this.state.newGroupName}\n                            onChange={this.newGroupNameHandleChange}\n                            type={\"text\"}\n                        />&nbsp;\n                        <button type=\"submit\" className=\"btn btn-outline-success\">\n                            Create group\n                        </button>\n                    </div>\n                </form>\n                <ul>\n                    {\n                        groups ?\n                            groups.map((item, key) => {\n                                return <li key={item.id}>\n                                    <a href={\"delete/\" + item.id} onClick={e => {\n                                        this.deleteGroup(e, item.id)\n                                    }}>Del</a>\n                                    [{item.createdAt}]\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <a href={item.id} onClick={(e) => this.handleGroupClick(e, key)} key={key}>\n                                        {item.name}\n                                    </a>\n                                </li>\n\n                            })\n                            :\n                            null\n                    }\n                </ul>\n                {selectedGroup ?\n                    <div>\n                        <h1>{selectedGroup.name}</h1>\n                        <table className=\"table table-striped\">\n                            <TableHeader/>\n                            <tbody>\n                            {\n                                words ?\n                                    words.map((item, key) => {\n                                        let lastPractice;\n                                        if (item.examples.length > 0) {\n                                            lastPractice = item.examples[item.examples.length - 1].createdAt\n                                        } else {\n                                            lastPractice = 'never';\n                                        }\n                                        return <tr key={item.id}>\n                                            <th scope=\"row\">{key + 1}</th>\n                                            <td>{item.name}</td>\n                                            <td>{item.createdAt}</td>\n                                            <td>{item.examples.length}</td>\n                                            <td>{lastPractice}</td>\n                                            <td><DictionaryLinks word={item.name}/></td>\n                                            <td>\n                                                <a\n                                                    rel=\"noopener noreferrer\" target=\"_blank\"\n                                                    href={'/practice/' + item.id}>\n                                                    Practice\n                                                </a>\n                                            </td>\n                                            <td>\n                                                <a href={item.id} onClick={e => {e.preventDefault()}}>Del</a>\n                                                &nbsp;|&nbsp;\n                                                <a href={item.id} onClick={e => {e.preventDefault()}}>Edit</a>\n                                            </td>\n                                        </tr>\n                                    })\n                                    :\n                                    null\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                    : null}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\nimport { Button, Divider, Form, Icon, Input, Popconfirm, Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    return <Input/>;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass Examples extends React.Component {\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }}/>\n    ),\n    onFilter: (value, record) => {\n      if (record[dataIndex] !== null) {\n        return record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase())\n      }\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    console.log(selectedKeys, confirm, dataIndex);\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      examples: [],\n      editingKey: '',\n      isLoading: true,\n    };\n\n    this.columns = [\n      {\n        title: 'The word',\n        dataIndex: 'word',\n        width: '8%',\n        editable: false,\n        sorter: (a, b) => a.word - b.word,\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Example',\n        dataIndex: 'text',\n        width: '24%',\n        editable: true,\n        sorter: (a, b) => a.text.localeCompare(b.text),\n        sortDirections: ['descend', 'ascend'],\n        ...this.getColumnSearchProps('text')\n      },\n      {\n        title: 'Dictionaries',\n        dataIndex: 'dictionaries',\n        width: '8%',\n        render: (text, record) => {\n          return (\n            <span>\n              <DictionaryLinks word={record.word}/>\n            </span>\n          );\n        },\n      },\n      {\n        title: 'Example date',\n        dataIndex: 'createdAt',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Word date',\n        dataIndex: 'wordCreatedAt',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.wordCreatedAt) - new Date(b.wordCreatedAt),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Operation',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    href={'no-action'}\n                    onClick={(e) => this.save(e, form, record.wordId)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.wordId)}>\n                <a href={'no-action'}>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <>\n              <a\n                rel=\"noopener noreferrer\" target=\"_blank\"\n                href={'/practice/' + record.wordId}>\n                Practice\n              </a> - <a href={'no-action'} disabled={editingKey !== ''} onClick={\n              (e) => this.edit(record.wordId, e)}>\n              Edit\n            </a> - <a href={\"delete/\" + record.wordId} onClick={e => {\n              this.deleteWord(e, record.wordId) // TODO implement method delete example\n            }}>Del</a>\n            </>\n          );\n        },\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.fetchExamples();\n  }\n\n  fetchExamples() {\n    this.setState({ isLoading: true });\n    const that = this;\n    fetch(`${window.rest.apiUrl}/api/example`)\n    .then((resp) => resp.json())\n    .then(function (data) {\n      that.setState({ examples: data, isLoading: false });\n    })\n  }\n\n  deleteExample = (e, id) => {\n    e.preventDefault();\n    fetch(`${window.rest.apiUrl}/api/example/${id}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n    })\n    .then(() => {\n      this.fetchExamples();\n    })\n    .catch(err => console.log(err));\n  };\n\n  isEditing = record => record.wordId === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  edit(key, e) {\n    e.preventDefault();\n    this.setState({ editingKey: key });\n  }\n\n  render() {\n    const { examples } = this.state;\n\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <Divider/>\n        <Table\n          components={components}\n          bordered\n          dataSource={examples}\n          columns={columns}\n          rowKey={\"id\"}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: this.cancel,\n            defaultPageSize: 100,\n          }}\n        />\n      </EditableContext.Provider>\n    );\n  }\n}\n\nexport default Form.create()(Examples);\n","import React from 'react';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\n\nexport default class Examples extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: '',\n      wordCreatedAt: '',\n      wordId: Number(props.match.params.id),\n      examples: [],\n      exampleToAdd: '',\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTheWord();\n  }\n\n  fetchTheWord() {\n    const that = this;\n    fetch(`${window.rest.apiUrl}/api/word/${this.state.wordId}`)\n    .then((response) => response.json())\n    .then(function (data) {\n      that.setState({\n        examples: data.examples,\n        word: data.name,\n        wordCreatedAt: data.createdAt,\n      });\n    })\n  }\n\n  textareaHandleChange = (e) => {\n    this.setState({ exampleToAdd: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    fetch(`${window.rest.apiUrl}/api/word/example`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(\n        {\n          wordId: this.state.wordId,\n          text: this.state.exampleToAdd\n        }\n      )\n    })\n    .then(() => {\n      this.setState({ exampleToAdd: '' });\n      this.fetchTheWord();\n    })\n    .catch(err => console.log(err));\n    e.preventDefault();\n  };\n\n  render() {\n    const { examples } = this.state;\n    return (\n      <div id=\"test\" className=\"container\">\n        <h2>{this.state.word} [added {this.state.wordCreatedAt}]</h2>\n        <DictionaryLinks word={this.state.word} />\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleTextarea\">Type example here</label>\n            <textarea\n              className=\"form-control\"\n              value={this.state.exampleToAdd}\n              onChange={this.textareaHandleChange}\n              rows=\"3\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-outline-success\">Add example</button>\n        </form>\n        <br />\n        <div>\n          <ul className=\"list-group list-group-flush\" id=\"examplesList\">\n            {\n              examples ?\n                examples.map((item, key) => {\n                  return <li className=\"list-group-item\" key={key}>\n                    [{item.createdAt}]\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    {item.text}\n                  </li>\n                })\n                :\n                null\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Words from './components/words/words';\nimport Groups from './components/groups/groups';\nimport Examples from './components/examples/examples';\nimport Practice from './components/examples/practice';\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Content, Footer, Sider } = Layout;\n\nfunction App() {\n\n  return (\n\n    <BrowserRouter>\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={broken => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n        >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n            <Menu.Item key=\"1\">\n              <Link to={'/'}>\n                <span className=\"nav-text\">\n                  Words\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to={'/example'}>\n                <span className=\"nav-text\">\n                  Examples\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to={'/groups'}>\n                <span className=\"nav-text\">\n                  Groups\n                </span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <Route exact path={\"/\"} component={Words} />\n            <Route exact path={\"/example\"} component={Examples} />\n            <Route exact path={\"/practice/:id\"} component={Practice} />\n            <Route exact path={\"/groups\"} component={Groups} />\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>&nbsp;&copy; 2020 Language study service</Footer>\n        </Layout>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}