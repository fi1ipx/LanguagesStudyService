{"version":3,"sources":["components/dictionaryLinks/dictionaryLinks.js","components/words/words.js","components/words/tableHeader.js","components/groups/groups.js","components/loader/loader.js","components/examples/examples.js","components/examples/practice.js","App.js","serviceWorker.js","index.js"],"names":["dictionaryLinks","props","word","react_default","a","createElement","Fragment","href","className","rel","target","EditableContext","React","createContext","TextArea","Input","EditableCell","getInput","input","renderCell","_ref","getFieldDecorator","_this$props","_this","editing","dataIndex","title","record","inputType","children","index","restProps","Object","objectWithoutProperties","es_form","Item","style","margin","rules","required","message","concat","initialValue","Consumer","this","Component","Words","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getColumnSearchProps","filterDropdown","_ref2","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","e","onPressEnter","handleSearch","width","marginBottom","display","es_button","type","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","searchedColumn","main_default","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","console","log","setState","textareaHandleChange","wordsToAdd","handleCheckBoxSelect","selectedValues","selectedWords","slice","checked","push","delIndex","indexOf","splice","showAddWordsToGroup","length","handleSubmit","fetch","window","rest","apiUrl","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","words","then","fetchWords","catch","err","preventDefault","handleAddToTheGroup","groupId","selectedGroupId","wordIds","handleChangeGroup","deleteWord","wordId","isEditing","key","editingKey","cancel","saveOnTheServer","item","row","id","groups","isLoading","totalPages","pageNumber","pageSize","columns","objectSpread","editable","sorter","b","name","localeCompare","sortDirections","practiced","Date","last","createdAt","form","save","popconfirm","onConfirm","disabled","edit","_this3","resp","json","data","content","forEach","exampleArr","convertedWord","examples","map","sort","reverse","toLocaleString","_this4","_this5","validateFields","error","newData","toConsumableArray","findIndex","_this6","components","cell","col","onCell","Provider","rows","divider","table","bordered","dataSource","rowClassName","pagination","defaultPageSize","Form","create","tableHeader","scope","Groups","newGroupName","fetchGroups","newGroupNameHandleChange","handleGroupClick","selectedGroup","deleteGroup","_this$state","onSubmit","htmlFor","lastPractice","loader","role","Examples","deleteExample","fetchExamples","that","wordCreatedAt","exampleToAdd","fetchTheWord","Number","match","params","response","Content","Layout","Footer","Sider","App","react_router_dom","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","menu","theme","defaultSelectedKeys","to","react_router","exact","path","component","Practice","textAlign","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02715700.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function dictionaryLinks(props) {\n    const word = props.word;\n\n    return (\n        <React.Fragment>\n            <a href={\"https://translate.google.ru/#view=home&op=translate&sl=en&tl=ru&text=\" + word}\n               className=\"badge badge-primary\" rel=\"noopener noreferrer\" target=\"_blank\">G</a>&nbsp;\n            <a href={\"https://dictionary.cambridge.org/dictionary/english/\" + word}\n               className=\"badge badge-secondary\" rel=\"noopener noreferrer\" target=\"_blank\">C</a>&nbsp;\n            <a href={\"https://www.urbandictionary.com/define.php?term=\" + word}\n               className=\"badge badge-info\" rel=\"noopener noreferrer\" target=\"_blank\">U</a>&nbsp;\n            <a href={\"https://www.dictionary.com/browse/\" + word}\n               className=\"badge badge-light\" rel=\"noopener noreferrer\" target=\"_blank\">D</a>&nbsp;\n            <a href={\"https://youglish.com/search/\" + word + \"/us\"}\n               className=\"badge badge-danger\" rel=\"noopener noreferrer\" target=\"_blank\">Y</a>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport { Button, Divider, Form, Icon, Input, Popconfirm, Table } from 'antd';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\nimport Highlighter from 'react-highlight-words';\n\nconst EditableContext = React.createContext();\n\nconst { TextArea } = Input;\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass Words extends React.Component {\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) => {\n      if (record[dataIndex] !== null) {\n        return record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase())}\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    console.log(selectedKeys, confirm, dataIndex);\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      groups: [],\n      selectedWords: [],\n      wordsToAdd: '',\n      showAddWordsToGroup: false,\n      selectedGroupId: undefined,\n      isLoading: false,\n      totalPages: 0,\n      pageNumber: 0,\n      pageSize: 1000,\n      editingKey: '',\n      searchText: '',\n      searchedColumn: '',\n    };\n\n    this.columns = [\n      {\n        title: 'The word',\n        dataIndex: 'name',\n        width: '10%',\n        editable: true,\n        sorter: (a, b) => a.name.localeCompare(b.name),\n        sortDirections: ['descend', 'ascend'],\n        ...this.getColumnSearchProps('name')\n      },\n      {\n        title: 'Practiced',\n        dataIndex: 'practiced',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => a.practiced - b.practiced,\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Last',\n        dataIndex: 'last',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.last) - new Date(b.last),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Added',\n        dataIndex: 'createdAt',\n        width: '10%',\n        editable: false,\n        sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Dictionaries',\n        dataIndex: 'dictionaries',\n        width: '10%',\n        render: (text, record) => {\n          return (\n            <span>\n              <DictionaryLinks word={record.name} />\n            </span>\n          );\n        },\n      },\n      {\n        title: 'Operation',\n        dataIndex: 'operation',\n        width: '20%',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    href={'no-action'}\n                    onClick={(e) => this.save(e, form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                <a href={'no-action'}>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <>\n              <a\n                rel=\"noopener noreferrer\" target=\"_blank\"\n                href={'/practice/' + record.key}>\n                Practice\n              </a> - <a href={'no-action'} disabled={editingKey !== ''} onClick={\n              (e) => this.edit(record.key, e)}>\n              Edit\n            </a> - <a href={\"delete/\" + record.key} onClick={e => {\n              this.deleteWord(e, record.key)\n            }}>Del</a>\n            </>\n          );\n        },\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.fetchWords(0);\n  }\n\n  fetchWords(pageNumber) {\n    fetch(`${window.rest.apiUrl}/api/word?size=${this.state.pageSize}&page=${pageNumber}`)\n    .then((resp) => resp.json())\n    .then((data) => {\n      let words = [];\n      data.content.forEach(item => {\n        const pullLastPracticedDate = (exampleArr) => {\n          if (exampleArr !== undefined && exampleArr.length > 0) {\n            const val = exampleArr.map(function (e) {\n              return e.createdAt;\n            }).sort().reverse()[0];\n            return val.toLocaleString('ru-RU')\n          } else {\n            return null;\n          }\n        };\n        const convertedWord = {\n          key: item.id.toString(),\n          practiced: item.examples.length,\n          last: pullLastPracticedDate(item.examples),\n          ...item\n        };\n        words.push(convertedWord);\n      });\n      this.setState({\n        words,\n      })\n    })\n  }\n\n  fetchGroups() {\n    fetch(`${window.rest.apiUrl}/api/group`)\n    .then((resp) => resp.json())\n    .then((data) => {\n      this.setState({ groups: data })\n    })\n  }\n\n  textareaHandleChange = (e) => {\n    this.setState({ wordsToAdd: e.target.value });\n  };\n\n  handleCheckBoxSelect = (e) => {\n    const selectedValues = this.state.selectedWords.slice();\n    if (e.target.checked) {\n      selectedValues.push(e.target.value);\n    } else {\n      const delIndex = selectedValues.indexOf(e.target.value);\n      selectedValues.splice(delIndex, 1);\n    }\n    const showAddWordsToGroup = selectedValues.length > 0;\n    this.setState({\n      selectedWords: selectedValues,\n      showAddWordsToGroup,\n    })\n  };\n\n  handleSubmit = (e) => {\n    fetch(`${window.rest.apiUrl}/api/word/create-word-list`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({ words: this.state.wordsToAdd })\n    })\n    .then(() => {\n      this.setState({ wordsToAdd: '' });\n      this.fetchWords();\n    })\n    .catch(err => console.log(err));\n    e.preventDefault();\n  };\n\n  handleAddToTheGroup = (e) => {\n    fetch(`${window.rest.apiUrl}/api/group/add-group-members`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        groupId: this.state.selectedGroupId,\n        wordIds: this.state.selectedWords,\n      })\n    })\n    .then(() => {\n      this.setState({ selectedWords: [], selectedGroupId: null });\n    })\n    .catch(err => console.log(err));\n  };\n\n  handleChangeGroup = (e) => {\n    this.setState({ selectedGroupId: e.target.value });\n  };\n\n  deleteWord = (e, wordId) => {\n    e.preventDefault();\n    fetch(`${window.rest.apiUrl}/api/word/${wordId}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n    })\n    .then(() => {\n      this.fetchWords();\n    })\n    .catch(err => console.log(err));\n  };\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(e, form, key) {\n    e.preventDefault();\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.words];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.saveOnTheServer(item, row);\n        this.setState({ words: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ words: newData, editingKey: '' });\n      }\n    });\n  }\n\n  saveOnTheServer = (item, row) => {\n    console.log(item, row);\n    fetch(`${window.rest.apiUrl}/api/word/${item.id}`, {\n      method: 'PATCH',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(row)\n    })\n    .then(() => {\n      //\n    })\n    .catch(err => console.log(err));\n  };\n\n  edit(key, e) {\n    e.preventDefault();\n    this.setState({ editingKey: key });\n  }\n\n  render() {\n    const { words } = this.state;\n\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <TextArea\n          className=\"form-control\"\n          rows=\"3\"\n          value={this.state.wordsToAdd}\n          onChange={this.textareaHandleChange}\n        />\n        <Button type=\"submit\" onClick={this.handleSubmit}>\n          Add words\n        </Button>\n        <Divider />\n        <Table\n          components={components}\n          bordered\n          dataSource={words}\n          columns={columns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: this.cancel,\n            defaultPageSize: 100,\n          }}\n        />\n      </EditableContext.Provider>\n    );\n  }\n}\n\nexport default Form.create()(Words);\n","import React from \"react\";\n\nexport default function tableHeader() {\n    return (\n        <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">The word</th>\n            <th scope=\"col\" className=\"d-lg-none\">Word id</th>\n            <th scope=\"col\">Added</th>\n            <th scope=\"col\">Practiced</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Dictionaries</th>\n            <th scope=\"col\">Practice</th>\n            <th scope=\"col\">Manage</th>\n        </tr>\n        </thead>\n    )\n}","import React from 'react';\nimport TableHeader from \"../words/tableHeader\";\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\n\nexport default class Groups extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            words: [],\n            groups: [],\n            selectedWords: [],\n            newGroupName: '',\n            selectedGroup: null,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchGroups();\n    }\n\n    fetchGroups() {\n        fetch(`${window.rest.apiUrl}/api/group`)\n            .then((resp) => resp.json())\n            .then((data) => {\n                this.setState({groups: data})\n            })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.newGroupName.length > 0) {\n            fetch(`${window.rest.apiUrl}/api/group`, {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                redirect: 'follow',\n                referrer: 'no-referrer',\n                body: JSON.stringify(\n                    {\n                        name: this.state.newGroupName,\n                    }\n                )\n            })\n                .then(() => {\n                    this.setState({newGroupName: ''});\n                    this.fetchGroups();\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    newGroupNameHandleChange = (e) => {\n        this.setState({newGroupName: e.target.value});\n    };\n\n    handleGroupClick = (e, key) => {\n        e.preventDefault();\n        const selectedGroup = this.state.groups[key];\n        this.setState({words: this.state.groups[key].words, selectedGroup: selectedGroup});\n    };\n\n    deleteGroup = (e, id) => {\n        e.preventDefault();\n        e.preventDefault();\n        fetch(`${window.rest.apiUrl}/api/group/${id}`, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n        })\n            .then(() => {\n                this.fetchGroups()\n            })\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        const {groups, words, selectedGroup} = this.state;\n\n        return (\n            <div id=\"test\" className=\"container\">\n                <h2>Manage groups</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <br/>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"newWordsTextarea\">New group name&nbsp;</label>\n                        <input\n                            value={this.state.newGroupName}\n                            onChange={this.newGroupNameHandleChange}\n                            type={\"text\"}\n                        />&nbsp;\n                        <button type=\"submit\" className=\"btn btn-outline-success\">\n                            Create group\n                        </button>\n                    </div>\n                </form>\n                <ul>\n                    {\n                        groups ?\n                            groups.map((item, key) => {\n                                return <li key={item.id}>\n                                    <a href={\"delete/\" + item.id} onClick={e => {\n                                        this.deleteGroup(e, item.id)\n                                    }}>Del</a>\n                                    [{item.createdAt}]\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <a href={item.id} onClick={(e) => this.handleGroupClick(e, key)} key={key}>\n                                        {item.name}\n                                    </a>\n                                </li>\n\n                            })\n                            :\n                            null\n                    }\n                </ul>\n                {selectedGroup ?\n                    <div>\n                        <h1>{selectedGroup.name}</h1>\n                        <table className=\"table table-striped\">\n                            <TableHeader/>\n                            <tbody>\n                            {\n                                words ?\n                                    words.map((item, key) => {\n                                        let lastPractice;\n                                        if (item.examples.length > 0) {\n                                            lastPractice = item.examples[item.examples.length - 1].createdAt\n                                        } else {\n                                            lastPractice = 'never';\n                                        }\n                                        return <tr key={item.id}>\n                                            <th scope=\"row\">{key + 1}</th>\n                                            <td>{item.name}</td>\n                                            <td>{item.createdAt}</td>\n                                            <td>{item.examples.length}</td>\n                                            <td>{lastPractice}</td>\n                                            <td><DictionaryLinks word={item.name}/></td>\n                                            <td>\n                                                <a\n                                                    rel=\"noopener noreferrer\" target=\"_blank\"\n                                                    href={'/practice/' + item.id}>\n                                                    Practice\n                                                </a>\n                                            </td>\n                                            <td>\n                                                <a href={item.id} onClick={e => {e.preventDefault()}}>Del</a>\n                                                &nbsp;|&nbsp;\n                                                <a href={item.id} onClick={e => {e.preventDefault()}}>Edit</a>\n                                            </td>\n                                        </tr>\n                                    })\n                                    :\n                                    null\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                    : null}\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nexport default function loader() {\n    return (<div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n    </div>)\n}","import React from 'react';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\nimport Loader from \"../loader/loader\";\n\nexport default class Examples extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            examples: [],\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchExamples();\n    }\n\n    fetchExamples() {\n        this.setState({isLoading: true});\n        const that = this;\n        fetch(`${window.rest.apiUrl}/api/example`)\n            .then((resp) => resp.json())\n            .then(function (data) {\n                that.setState({examples: data, isLoading: false});\n            })\n    }\n\n    deleteExample = (e, id) => {\n        e.preventDefault();\n        fetch(`${window.rest.apiUrl}/api/example/${id}`, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n        })\n            .then(() => {\n                this.fetchExamples();\n            })\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        const {examples, isLoading} = this.state;\n\n        return (\n            <div id=\"test\" className=\"container\">\n                {\n                    isLoading ? <Loader/> :\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">The word</th>\n                                <th scope=\"col\">Example</th>\n                                <th scope=\"col\">Dictionaries</th>\n                                <th scope=\"col\">Example date</th>\n                                <th scope=\"col\">Word date</th>\n                                <th scope=\"col\">Manage</th>\n                            </tr>\n                            </thead>\n                            <tbody id=\"tbody\">\n                            {\n                                examples ?\n                                    examples.map((item, key) => {\n\n                                        return <tr key={item.id}>\n                                            <th scope=\"row\">{key + 1}</th>\n                                            <td>\n                                                <a\n                                                    rel=\"noopener noreferrer\" target=\"_blank\"\n                                                    href={'/practice/' + item.wordId}>\n                                                    {item.word}\n                                                </a>\n                                            </td>\n                                            <td>{item.text}</td>\n                                            <td><DictionaryLinks word={item.word}/></td>\n                                            <td>{item.createdAt}</td>\n                                            <td>{item.wordCreatedAt}</td>\n                                            <td>\n                                                <a href={\"delete/\" + item.id} onClick={e => {\n                                                    this.deleteExample(e, item.id)\n                                                }}>Del</a>\n                                            </td>\n                                        </tr>\n                                    })\n                                    :\n                                    null\n                            }\n                            </tbody>\n                        </table>\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DictionaryLinks from \"../dictionaryLinks/dictionaryLinks\";\n\nexport default class Examples extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: '',\n      wordCreatedAt: '',\n      wordId: Number(props.match.params.id),\n      examples: [],\n      exampleToAdd: '',\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTheWord();\n  }\n\n  fetchTheWord() {\n    const that = this;\n    fetch(`${window.rest.apiUrl}/api/word/${this.state.wordId}`)\n    .then((response) => response.json())\n    .then(function (data) {\n      that.setState({\n        examples: data.examples,\n        word: data.name,\n        wordCreatedAt: data.createdAt,\n      });\n    })\n  }\n\n  textareaHandleChange = (e) => {\n    this.setState({ exampleToAdd: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    fetch(`${window.rest.apiUrl}/api/word/example`, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(\n        {\n          wordId: this.state.wordId,\n          text: this.state.exampleToAdd\n        }\n      )\n    })\n    .then(() => {\n      this.setState({ exampleToAdd: '' });\n      this.fetchTheWord();\n    })\n    .catch(err => console.log(err));\n    e.preventDefault();\n  };\n\n  render() {\n    const { examples } = this.state;\n    return (\n      <div id=\"test\" className=\"container\">\n        <h2>{this.state.word} [added {this.state.wordCreatedAt}]</h2>\n        <DictionaryLinks word={this.state.word} />\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleTextarea\">Type example here</label>\n            <textarea\n              className=\"form-control\"\n              value={this.state.exampleToAdd}\n              onChange={this.textareaHandleChange}\n              rows=\"3\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-outline-success\">Add example</button>\n        </form>\n        <br />\n        <div>\n          <ul className=\"list-group list-group-flush\" id=\"examplesList\">\n            {\n              examples ?\n                examples.map((item, key) => {\n                  return <li className=\"list-group-item\" key={key}>\n                    [{item.createdAt}]\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    {item.text}\n                  </li>\n                })\n                :\n                null\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Words from './components/words/words';\nimport Groups from './components/groups/groups';\nimport Examples from './components/examples/examples';\nimport Practice from './components/examples/practice';\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Content, Footer, Sider } = Layout;\n\nfunction App() {\n\n  return (\n\n    <BrowserRouter>\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={broken => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n        >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n            <Menu.Item key=\"1\">\n              <Link to={'/'}>\n                <span className=\"nav-text\">\n                  Words\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to={'/example'}>\n                <span className=\"nav-text\">\n                  Examples\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to={'/groups'}>\n                <span className=\"nav-text\">\n                  Groups\n                </span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <Route exact path={\"/\"} component={Words} />\n            <Route exact path={\"/example\"} component={Examples} />\n            <Route exact path={\"/practice/:id\"} component={Practice} />\n            <Route exact path={\"/groups\"} component={Groups} />\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>&nbsp;&copy; 2020 Language study service</Footer>\n        </Layout>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}